# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrder(self, root: TreeNode) -> List[List[int]]:
        
        result = []
        queue = deque()
        if not root:
            return result
        queue.append(root)
        while queue:
            size = len(queue)
            curr_level = []
            while size:
                node = queue.popleft()
                curr_level.append(node.val)
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
                
                size -= 1
            result.append(curr_level)
            
        return result
        
        
        
