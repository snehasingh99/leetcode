# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:
        #--------hashmap solution------- 
        tab = {}
        pA = headA
        while(pA):
            tab[pA] = pA.val
            pA = pA.next
         
        pB = headB
        while(pB):
            if pB in tab:
                return pB
            pB = pB.next
        
        return None
        
        '''
        -------Two pointer solution-----
        
        if headA == None or headB == None:
            return None
        
        pA, pB = headA, headB
        while(pA != pB):
            if pA == None:
                pA = headB
            else:
                pA = pA.next
            
            if pB == None:
                pB = headA
            else:
                pB = pB.next
        
        return pA
        '''
